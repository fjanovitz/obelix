// Generated by gencpp from file drivers/CaptureImage.msg
// DO NOT EDIT!


#ifndef DRIVERS_MESSAGE_CAPTUREIMAGE_H
#define DRIVERS_MESSAGE_CAPTUREIMAGE_H

#include <ros/service_traits.h>


#include <drivers/CaptureImageRequest.h>
#include <drivers/CaptureImageResponse.h>


namespace drivers
{

struct CaptureImage
{

typedef CaptureImageRequest Request;
typedef CaptureImageResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CaptureImage
} // namespace drivers


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::drivers::CaptureImage > {
  static const char* value()
  {
    return "b13d2865c5af2a64e6e30ab1b56e1dd5";
  }

  static const char* value(const ::drivers::CaptureImage&) { return value(); }
};

template<>
struct DataType< ::drivers::CaptureImage > {
  static const char* value()
  {
    return "drivers/CaptureImage";
  }

  static const char* value(const ::drivers::CaptureImage&) { return value(); }
};


// service_traits::MD5Sum< ::drivers::CaptureImageRequest> should match
// service_traits::MD5Sum< ::drivers::CaptureImage >
template<>
struct MD5Sum< ::drivers::CaptureImageRequest>
{
  static const char* value()
  {
    return MD5Sum< ::drivers::CaptureImage >::value();
  }
  static const char* value(const ::drivers::CaptureImageRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::drivers::CaptureImageRequest> should match
// service_traits::DataType< ::drivers::CaptureImage >
template<>
struct DataType< ::drivers::CaptureImageRequest>
{
  static const char* value()
  {
    return DataType< ::drivers::CaptureImage >::value();
  }
  static const char* value(const ::drivers::CaptureImageRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::drivers::CaptureImageResponse> should match
// service_traits::MD5Sum< ::drivers::CaptureImage >
template<>
struct MD5Sum< ::drivers::CaptureImageResponse>
{
  static const char* value()
  {
    return MD5Sum< ::drivers::CaptureImage >::value();
  }
  static const char* value(const ::drivers::CaptureImageResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::drivers::CaptureImageResponse> should match
// service_traits::DataType< ::drivers::CaptureImage >
template<>
struct DataType< ::drivers::CaptureImageResponse>
{
  static const char* value()
  {
    return DataType< ::drivers::CaptureImage >::value();
  }
  static const char* value(const ::drivers::CaptureImageResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DRIVERS_MESSAGE_CAPTUREIMAGE_H
