// Generated by gencpp from file drivers/Servo.msg
// DO NOT EDIT!


#ifndef DRIVERS_MESSAGE_SERVO_H
#define DRIVERS_MESSAGE_SERVO_H

#include <ros/service_traits.h>


#include <drivers/ServoRequest.h>
#include <drivers/ServoResponse.h>


namespace drivers
{

struct Servo
{

typedef ServoRequest Request;
typedef ServoResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Servo
} // namespace drivers


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::drivers::Servo > {
  static const char* value()
  {
    return "2a0eff76c870e8595636c2a562ca298e";
  }

  static const char* value(const ::drivers::Servo&) { return value(); }
};

template<>
struct DataType< ::drivers::Servo > {
  static const char* value()
  {
    return "drivers/Servo";
  }

  static const char* value(const ::drivers::Servo&) { return value(); }
};


// service_traits::MD5Sum< ::drivers::ServoRequest> should match
// service_traits::MD5Sum< ::drivers::Servo >
template<>
struct MD5Sum< ::drivers::ServoRequest>
{
  static const char* value()
  {
    return MD5Sum< ::drivers::Servo >::value();
  }
  static const char* value(const ::drivers::ServoRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::drivers::ServoRequest> should match
// service_traits::DataType< ::drivers::Servo >
template<>
struct DataType< ::drivers::ServoRequest>
{
  static const char* value()
  {
    return DataType< ::drivers::Servo >::value();
  }
  static const char* value(const ::drivers::ServoRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::drivers::ServoResponse> should match
// service_traits::MD5Sum< ::drivers::Servo >
template<>
struct MD5Sum< ::drivers::ServoResponse>
{
  static const char* value()
  {
    return MD5Sum< ::drivers::Servo >::value();
  }
  static const char* value(const ::drivers::ServoResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::drivers::ServoResponse> should match
// service_traits::DataType< ::drivers::Servo >
template<>
struct DataType< ::drivers::ServoResponse>
{
  static const char* value()
  {
    return DataType< ::drivers::Servo >::value();
  }
  static const char* value(const ::drivers::ServoResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DRIVERS_MESSAGE_SERVO_H
